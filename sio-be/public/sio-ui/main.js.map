{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.scss","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/services/ChatService.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatComponent } from './chat/chat.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/chat',\n    pathMatch: 'full'\n  },\n  {\n    path: 'chat',\n    component: ChatComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<main>\\n    <router-outlet></router-outlet>\\n</main>\"","module.exports = \"main {\\n  padding: 20px;\\n  height: 100%;\\n  background-color: aliceblue; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZyYW5jaXNjby9Eb2N1bWVudG9zL2Rldi9zaW8vc2lvLXVpL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBYTtFQUNiLGFBQVk7RUFDWiw0QkFBMkIsRUFDOUIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYWluIHtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBhbGljZWJsdWU7XG59Il19 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'sio-ui';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nconst config: SocketIoConfig = { url: 'http://localhost:8080', options: {} };\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { ChatService } from 'src/services/ChatService';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    HeaderComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    SocketIoModule.forRoot(config)\n  ],\n  providers: [\n    ChatService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<section>\\n\\n  <form novalidate>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"usernamename\\\">Username</label>\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"username\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"message\\\">Message</label>\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"message\\\" placeholder=\\\"...\\\" [(ngModel)]=\\\"message\\\" />\\n    </div>\\n\\n    <button class=\\\"btn btn-success\\\" type=\\\"button\\\" [disabled]=\\\"!isValid\\\" (click)=\\\"sendMesage()\\\">SEND</button>\\n\\n  </form>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let m of messages\\\" class=\\\"list-group-item\\\">\\n      <span>{{ m.author }} says {{ m.text }}</span>\\n    </li>\\n  </ul>\\n\\n\\n</section>\"","module.exports = \"section {\\n  width: 100%;\\n  display: flex; }\\n\\nform {\\n  flex-grow: 0.3; }\\n\\n.list-group {\\n  flex-grow: 0.7;\\n  margin-left: 24px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2ZyYW5jaXNjby9Eb2N1bWVudG9zL2Rldi9zaW8vc2lvLXVpL3NyYy9hcHAvY2hhdC9jaGF0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBVztFQUNYLGNBQWEsRUFDaEI7O0FBRUQ7RUFDSSxlQUFjLEVBQ2pCOztBQUVEO0VBQ0ksZUFBYztFQUNkLGtCQUFpQixFQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NoYXQvY2hhdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInNlY3Rpb24ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5cbmZvcm0ge1xuICAgIGZsZXgtZ3JvdzogMC4zO1xufVxuXG4ubGlzdC1ncm91cCB7XG4gICAgZmxleC1ncm93OiAwLjc7XG4gICAgbWFyZ2luLWxlZnQ6IDI0cHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from 'src/services/ChatService';\nimport { Message } from 'src/models/Message';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n\n  public message: string;\n  public username: string;\n\n  public messages: Message[];\n\n  constructor(\n    private chatService: ChatService\n  ) { }\n\n  ngOnInit() {\n    this.chatService\n      .getMessages()\n      .subscribe((messages: Message[]) => {\n        this.messages = messages;\n      });\n  }\n\n  public get isValid(): boolean {\n    return !!this.username && !!this.message;\n  }\n\n  public sendMesage(): void {\n    this.chatService.sendMessage({\n      timestamp: new Date().getTime(),\n      author: this.username,\n      text: this.message\n    });\n    this.message = '';\n  }\n\n}\n","module.exports = \"<p>\\n  footer works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  header works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { Observable } from 'rxjs';\nimport { Message } from '../models/Message';\n\n@Injectable()\nexport class ChatService {\n\n    constructor(private socket: Socket) { }\n\n    sendMessage(msg: Message) {\n        this.socket.emit('new-message', msg);\n    }\n\n    getMessages(): Observable<Message[]> {\n        return this.socket\n            .fromEvent('messages');\n    }\n\n}\n","/* (ignored) */"],"sourceRoot":""}